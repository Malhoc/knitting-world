{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport products from \"../../api/products\";\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState: {\n    allProducts: products,\n    filteredProducts: [],\n    selectedProduct: \"\",\n    filters: {\n      category: [],\n      colors: \"\",\n      size: \"\",\n      prices: [0, 10000]\n    },\n    cart: [],\n    wishList: []\n  },\n  reducers: {\n    setProducts(state, action) {\n      state.allProducts = action.payload;\n      state.filteredProducts = action.payload;\n    },\n    addToCart(state, action) {\n      const product = action.payload;\n      const existingProductIndex = state.cart.findIndex(item => item.id === product.id);\n      if (existingProductIndex !== -1) {\n        // If the product already exists in the cart, replace it\n        toast(\"Product goes to cart\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\"\n        });\n        state.cart[existingProductIndex] = product;\n      } else {\n        toast(\"Product goes to cart\", {\n          position: \"top-right\",\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\"\n        });\n        state.cart.push(product);\n      }\n      const wishlistIndex = state.wishList.findIndex(item => item.id === product.id);\n      if (wishlistIndex !== -1) {\n        state.wishList.splice(wishlistIndex, 1);\n      }\n    },\n    addToWishList(state, action) {\n      const product = action.payload;\n      const existingProductIndex = state.wishList.findIndex(item => item.id === product.id);\n      if (existingProductIndex !== -1) {\n        state.wishList[existingProductIndex] = product;\n      } else {\n        const existingProductIndex = state.cart.findIndex(item => item.id === product.id);\n        if (existingProductIndex !== -1) {\n          toast(\"Product is already in cart\", {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"light\"\n          });\n        } else {\n          state.wishList.push(product);\n          toast(\"Product goes to wishList\", {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"light\"\n          });\n        }\n      }\n    },\n    setSelectedProduct(state, action) {\n      state.selectedProduct = action.payload;\n    },\n    setSelectedPortFolio(state, action) {\n      state.selectedPortFolio = action.payload;\n    },\n    setFilters(state, action) {\n      state.filters = {\n        ...state.filters,\n        ...action.payload\n      };\n    },\n    filterProducts(state) {\n      const {\n        allProducts,\n        filters\n      } = state;\n      const {\n        category,\n        colors,\n        size,\n        prices\n      } = filters;\n      const [minPrice, maxPrice] = prices;\n      const filteredProducts = allProducts.filter(product => {\n        const isCategoryMatch = category.length === 0 || category.some(selectedCategory => selectedCategory.toLowerCase() === product.category.toLowerCase());\n        const isColorMatch = !colors || product.colors.some(color => color.toLowerCase() === colors.toLowerCase());\n        const isSizeMatch = !size || Array.from(product.size).some(s => s === size);\n        const isPriceInRange = product.salePrice >= minPrice && product.salePrice <= maxPrice;\n        return isCategoryMatch && isColorMatch && isSizeMatch && isPriceInRange;\n      });\n      state.filteredProducts = filteredProducts;\n    },\n    updateCartItemQuantity(state, action) {\n      const {\n        index,\n        quantity\n      } = action.payload;\n      state.cart[index].quantity = quantity;\n    },\n    removeCartItem(state, action) {\n      const productId = action.payload;\n      const index = state.cart.findIndex(item => item.id === productId);\n      if (index !== -1) {\n        state.cart.splice(index, 1);\n      }\n    },\n    removeWishListItem(state, action) {\n      const productId = action.payload;\n      const index = state.wishList.findIndex(item => item.id === productId);\n      if (index !== -1) {\n        state.wishList.splice(index, 1);\n      }\n    },\n    resetFilters(state) {\n      state.filters = {\n        category: [],\n        colors: \"\",\n        sizes: \"\",\n        prices: [0, 10000]\n      };\n      state.filteredProducts = state.allProducts;\n    }\n  }\n});\nexport const {\n  setProducts,\n  setFilters,\n  filterProducts,\n  resetFilters,\n  addToCart,\n  updateCartItemQuantity,\n  removeCartItem,\n  setSelectedProduct,\n  addToWishList,\n  removeWishListItem\n} = productsSlice.actions;\nexport default productsSlice.reducer;","map":{"version":3,"names":["createSlice","toast","products","productsSlice","name","initialState","allProducts","filteredProducts","selectedProduct","filters","category","colors","size","prices","cart","wishList","reducers","setProducts","state","action","payload","addToCart","product","existingProductIndex","findIndex","item","id","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","push","wishlistIndex","splice","addToWishList","setSelectedProduct","setSelectedPortFolio","selectedPortFolio","setFilters","filterProducts","minPrice","maxPrice","filter","isCategoryMatch","length","some","selectedCategory","toLowerCase","isColorMatch","color","isSizeMatch","Array","from","s","isPriceInRange","salePrice","updateCartItemQuantity","index","quantity","removeCartItem","productId","removeWishListItem","resetFilters","sizes","actions","reducer"],"sources":["C:/Users/Maria/Desktop/Knitting World/knitting-world/src/store/reducer/productReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { toast } from \"react-toastify\";\r\nimport products from \"../../api/products\";\r\n\r\nconst productsSlice = createSlice({\r\n  name: \"products\",\r\n  initialState: {\r\n    allProducts: products,\r\n    filteredProducts: [],\r\n    selectedProduct: \"\",\r\n    filters: { category: [], colors: \"\", size: \"\", prices: [0, 10000] },\r\n    cart: [],\r\n    wishList: [],\r\n  },\r\n  reducers: {\r\n    setProducts(state, action) {\r\n      state.allProducts = action.payload;\r\n      state.filteredProducts = action.payload;\r\n    },\r\n    addToCart(state, action) {\r\n      const product = action.payload;\r\n      const existingProductIndex = state.cart.findIndex(\r\n        (item) => item.id === product.id\r\n      );\r\n\r\n      if (existingProductIndex !== -1) {\r\n        // If the product already exists in the cart, replace it\r\n        toast(\"Product goes to cart\", {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        state.cart[existingProductIndex] = product;\r\n      } else {\r\n        toast(\"Product goes to cart\", {\r\n          position: \"top-right\",\r\n          autoClose: 2000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        state.cart.push(product);\r\n      }\r\n      const wishlistIndex = state.wishList.findIndex(\r\n        (item) => item.id === product.id\r\n      );\r\n      if (wishlistIndex !== -1) {\r\n        state.wishList.splice(wishlistIndex, 1);\r\n      }\r\n    },\r\n    addToWishList(state, action) {\r\n      const product = action.payload;\r\n      const existingProductIndex = state.wishList.findIndex(\r\n        (item) => item.id === product.id\r\n      );\r\n\r\n      if (existingProductIndex !== -1) {\r\n        state.wishList[existingProductIndex] = product;\r\n      } else {\r\n        const existingProductIndex = state.cart.findIndex(\r\n          (item) => item.id === product.id\r\n        );\r\n\r\n        if (existingProductIndex !== -1) {\r\n          toast(\"Product is already in cart\", {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n        } else {\r\n          state.wishList.push(product);\r\n          toast(\"Product goes to wishList\", {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n        }\r\n      }\r\n    },\r\n    setSelectedProduct(state, action) {\r\n      state.selectedProduct = action.payload;\r\n    },\r\n    setSelectedPortFolio(state, action) {\r\n      state.selectedPortFolio = action.payload;\r\n    },\r\n    setFilters(state, action) {\r\n      state.filters = { ...state.filters, ...action.payload };\r\n    },\r\n\r\n    filterProducts(state) {\r\n      const { allProducts, filters } = state;\r\n      const { category, colors, size, prices } = filters;\r\n\r\n      const [minPrice, maxPrice] = prices;\r\n\r\n      const filteredProducts = allProducts.filter((product) => {\r\n        const isCategoryMatch =\r\n          category.length === 0 ||\r\n          category.some(\r\n            (selectedCategory) =>\r\n              selectedCategory.toLowerCase() === product.category.toLowerCase()\r\n          );\r\n\r\n        const isColorMatch =\r\n          !colors ||\r\n          product.colors.some(\r\n            (color) => color.toLowerCase() === colors.toLowerCase()\r\n          );\r\n\r\n        const isSizeMatch =\r\n          !size || Array.from(product.size).some((s) => s === size);\r\n\r\n        const isPriceInRange =\r\n          product.salePrice >= minPrice && product.salePrice <= maxPrice;\r\n        return isCategoryMatch && isColorMatch && isSizeMatch && isPriceInRange;\r\n      });\r\n\r\n      state.filteredProducts = filteredProducts;\r\n    },\r\n    updateCartItemQuantity(state, action) {\r\n      const { index, quantity } = action.payload;\r\n      state.cart[index].quantity = quantity;\r\n    },\r\n    removeCartItem(state, action) {\r\n      const productId = action.payload;\r\n      const index = state.cart.findIndex((item) => item.id === productId);\r\n\r\n      if (index !== -1) {\r\n        state.cart.splice(index, 1);\r\n      }\r\n    },\r\n    removeWishListItem(state, action) {\r\n      const productId = action.payload;\r\n      const index = state.wishList.findIndex((item) => item.id === productId);\r\n\r\n      if (index !== -1) {\r\n        state.wishList.splice(index, 1);\r\n      }\r\n    },\r\n\r\n    resetFilters(state) {\r\n      state.filters = {\r\n        category: [],\r\n        colors: \"\",\r\n        sizes: \"\",\r\n        prices: [0, 10000],\r\n      };\r\n      state.filteredProducts = state.allProducts;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setProducts,\r\n  setFilters,\r\n  filterProducts,\r\n  resetFilters,\r\n  addToCart,\r\n  updateCartItemQuantity,\r\n  removeCartItem,\r\n  setSelectedProduct,\r\n  addToWishList,\r\n  removeWishListItem,\r\n} = productsSlice.actions;\r\n\r\nexport default productsSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}